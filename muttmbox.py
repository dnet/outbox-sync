#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
# muttmbox.py - handles mbox files generated by the Mutt MUA
#
# Copyright (c) 2013 András Veres-Szentkirályi
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation
# files (the "Software"), to deal in the Software without
# restriction, including without limitation the rights to use,
# copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following
# conditions:
#
# The above copyright notice and this permission notice shall be
# included in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
# OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
# NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
# HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
# WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
# OTHER DEALINGS IN THE SOFTWARE.

from mailbox import mbox
import re

FROM_RE = re.compile(r'From [A-Z0-9._%+-]+@[A-Z0-9.-]+\.[A-Z]{2,4} ', re.I)

class MuttMbox(mbox):
    def _generate_toc(self):
        """Generate key-to-(start, stop) table of contents."""
        mbox._generate_toc(self)
        self._toc = dict(enumerate(self.transform()))

    def transform(self):
        last_start = None
        last_stop = None
        for _, (start, stop) in self._toc.iteritems():
            self._file.seek(start)
            line = self._file.readline()
            if last_start is not None:
                if FROM_RE.match(line):
                    yield last_start, last_stop
                    last_start = start
            else:
                last_start = start
            last_stop = stop
        yield last_start, stop
